use VeeamBackup
set transaction isolation level read uncommitted

DECLARE @searchValue uniqueidentifier
SET @searchValue = '{UID2FIND}'

declare @strSql nvarchar(max),
    @searchguid uniqueidentifier,
    @lowrow smallint,
    @SrchEvtTables bit,
    @SrchCharTypes bit,
    @SrchTextTypes bit,
    @CharTypeColName varchar(200) 

set @searchguid = ltrim(rtrim(@searchValue))
set @SrchEvtTables = 1
set @SrchCharTypes = 1
set @CharTypeColName = lower('%id')
set @SrchTextTypes = 0

declare @TablesToBeSearched table
(
    RowId smallint identity(1,1),
    TableName varchar(255),
    ColName varchar(128),
    IsGuidType bit,
    SQLQuery nvarchar(255)
) 

insert into @TablesToBeSearched
select [TABLE_NAME],
    [COLUMN_NAME],
    [IsGuidType],
    'from [' + [TABLE_NAME] + '] where [' + [COLUMN_NAME] + '] = ''' + cast(@searchguid as varchar(38)) + ''''
from
(
    select isc.[TABLE_NAME],
        isc.[COLUMN_NAME],
        1 [IsGuidType],
        case 
            when substring(isc.[TABLE_NAME], 1, 4) = 'Evt_' 
                then 1
            else 0
        end [IsEventTable]
    from INFORMATION_SCHEMA.COLUMNS isc
        inner join INFORMATION_SCHEMA.TABLES ist
            on isc.[TABLE_NAME] = ist.[TABLE_NAME]
    where isc.[DATA_TYPE] = 'uniqueidentifier'
        and ist.[TABLE_TYPE] = 'BASE TABLE'
) t1
where [IsEventTable] = 0
    or ([IsEventTable] = 1 and @SrchEvtTables = 1)

if (@SrchCharTypes = 1)
begin
    insert into @TablesToBeSearched
    select [TABLE_NAME],
        [COLUMN_NAME],
        [IsGuidType],
        'from [' + [TABLE_NAME] + '] where lower([' + [COLUMN_NAME] + ']) like ''%' + lower(cast(@searchguid as varchar(38))) + '%'''  
    from 
    (
        select isc.[TABLE_NAME],
            isc.[COLUMN_NAME],
            0 [IsGuidType],
            case
                when substring(isc.[TABLE_NAME], 1, 4) = 'Evt_'
                    then 1 
                else 0
            end [IsEventTable]
        from INFORMATION_SCHEMA.COLUMNS isc 
            join INFORMATION_SCHEMA.TABLES ist 
                on isc.[TABLE_NAME] = ist.[TABLE_NAME]
        where isc.[DATA_TYPE] in
        (
            'char',
            'nchar',
            'varchar',
            'nvarchar'
        )
            and lower(ltrim(rtrim(isc.[COLUMN_NAME]))) like ltrim(rtrim(@CharTypeColName))
            and ist.[TABLE_TYPE] = 'BASE TABLE'
            and isc.[CHARACTER_MAXIMUM_LENGTH] >= 38
    ) t1
    where [IsEventTable] = 0
        or ( [IsEventTable] = 1 and @SrchEvtTables = 1)  
end

if @SrchTextTypes  = 1
begin
    insert into @TablesToBeSearched
    select [TABLE_NAME],
        [COLUMN_NAME],
        [IsGuidType],
        'from [' + [TABLE_NAME] + '] where lower(cast([' + [COLUMN_NAME] + '] as nvarchar(max))) like ''%' + CAST(@searchguid AS varchar(38)) + '%''' 
    from
    (
        select isc.[TABLE_NAME],
            isc.[COLUMN_NAME],
            null [IsGuidType],
            case 
                when substring(isc.[TABLE_NAME], 1, 4) = 'Evt_' 
                    then 1
                else 0
            end [IsEventTable]
        from INFORMATION_SCHEMA.COLUMNS isc 
            join INFORMATION_SCHEMA.TABLES ist 
                on isc.[TABLE_NAME] = ist.[TABLE_NAME]
        where isc.[DATA_TYPE] in ('text', 'ntext')
            and ist.[TABLE_TYPE] = 'BASE TABLE'
    ) t1
    where [IsEventTable] = 0
        or ( [IsEventTable] = 1 and @SrchEvtTables = 1)
end

if (object_id('tempdb..#Found') is not null)
    drop table #Found

create table #Found (RowId smallint, RowsFound int)
set @lowrow = 0

while (@lowrow < (select max(RowId) from @TablesToBeSearched where IsGuidType is not null))
begin
    set @strSql = null

    select @strSql = coalesce(@strSql + ' union all select ', 'insert into #Found 
        select ') + '''' + cast(ttbs.[RowId] as varchar(10)) + ''' [id], count(*) [cnt] ' + ttbs.SQLQuery
    from @TablesToBeSearched ttbs
    where ttbs.[RowId] between @lowrow + 1 and @lowrow + 15
        and (IsGuidType = 1 or @SrchCharTypes = 1)
 
    exec(@strSql)
    
    set @lowrow = @lowrow + 15
end

set @lowrow = (select max(RowId) from @TablesToBeSearched where IsGuidType is not null)

if (@SrchTextTypes  = 1)
begin
    while (@lowrow < (select max(RowId) from @TablesToBeSearched where IsGuidType is null))
    begin
        set @strSql = null

        select @strSql = coalesce(@strSql + ' union all select ', 'insert into #Found
            select ') + '''' + cast(ttbs.[RowId] as varchar(10)) + ''' [id]
            , count(*) [cnt] ' + ttbs.SQLQuery
        from @TablesToBeSearched ttbs
        where ttbs.[RowId] between @lowrow + 1 and @lowrow + 1
            and ttbs.[IsGuidType] is null
            
        exec(@strSql)
        
        set @lowrow = @lowrow + 1
    end
end

select distinct ttbs.[TableName],
    ttbs.[ColName],
    f.[RowsFound],
    'select * ' + ttbs.SQLQuery
from #Found f
    join @TablesToBeSearched ttbs 
        on f.[RowId] = ttbs.[RowId]
where RowsFound > 0 

drop table #Found
